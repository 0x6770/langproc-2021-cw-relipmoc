Nonterminals useless in grammar

   number


Terminals unused in grammar

   T_FLOAT
   T_DOUBLE
   T_CHAR
   T_STRING
   T_UNSIGNED
   T_STRUCT
   T_TYPEDEF
   T_SIZEOF
   T_ENUM
   T_FLOAT_VALUE
   T_DOUBLE_VALUE
   T_CHAR_VALUE
   T_WHILE
   T_FOR
   T_SWITCH
   T_IF
   T_ELSE
   T_ELSEIF
   T_BREAK
   T_CONTINUE
   '<'
   '>'
   "<="
   ">="
   "!="


State 21 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 type: T_INT

    2 program: function

    3 function: type T_NAME '(' ')' '{' statement_list '}'

    4 statement_list: statement
    5               | statement_list statement

    6 statement: T_RETURN expr ';'
    7          | type T_NAME '=' expr ';'
    8          | type T_NAME ';'
    9          | T_NAME '=' expr ';'
   10          | expr ';'

   11 expr: term
   12     | expr '+' term
   13     | expr '-' term

   14 term: unary
   15     | term '*' unary
   16     | term '/' unary
   17     | term '%' unary

   18 unary: factor
   19      | '-' factor

   20 factor: T_INT_VALUE
   21       | '(' expr ')'
   22       | T_NAME
   23       | factor '^' unary


Terminals, with rules where they appear

$end (0) 0
'%' (37) 17
'(' (40) 3 21
')' (41) 3 21
'*' (42) 15
'+' (43) 12
'-' (45) 13 19
'/' (47) 16
';' (59) 6 7 8 9 10
'<' (60)
'=' (61) 7 9
'>' (62)
'^' (94) 23
'{' (123) 3
'}' (125) 3
error (256)
T_NAME (258) 3 7 8 9 22
T_RETURN (259) 6
T_INT (260) 1
T_FLOAT (261)
T_DOUBLE (262)
T_CHAR (263)
T_STRING (264)
T_UNSIGNED (265)
T_STRUCT (266)
T_TYPEDEF (267)
T_SIZEOF (268)
T_ENUM (269)
T_INT_VALUE (270) 20
T_FLOAT_VALUE (271)
T_DOUBLE_VALUE (272)
T_CHAR_VALUE (273)
T_WHILE (274)
T_FOR (275)
T_SWITCH (276)
T_IF (277)
T_ELSE (278)
T_ELSEIF (279)
T_BREAK (280)
T_CONTINUE (281)
"<=" (282)
">=" (283)
"!=" (284)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
type (45)
    on left: 1, on right: 3 7 8
program (46)
    on left: 2, on right: 0
function (47)
    on left: 3, on right: 2
statement_list (48)
    on left: 4 5, on right: 3 5
statement (49)
    on left: 6 7 8 9 10, on right: 4 5
expr (50)
    on left: 11 12 13, on right: 6 7 9 10 12 13 21
term (51)
    on left: 14 15 16 17, on right: 11 12 13 15 16 17
unary (52)
    on left: 18 19, on right: 14 15 16 17 23
factor (53)
    on left: 20 21 22 23, on right: 18 19 23


State 0

    0 $accept: . program $end

    T_INT  shift, and go to state 1

    type      go to state 2
    program   go to state 3
    function  go to state 4


State 1

    1 type: T_INT .

    $default  reduce using rule 1 (type)


State 2

    3 function: type . T_NAME '(' ')' '{' statement_list '}'

    T_NAME  shift, and go to state 5


State 3

    0 $accept: program . $end

    $end  shift, and go to state 6


State 4

    2 program: function .

    $default  reduce using rule 2 (program)


State 5

    3 function: type T_NAME . '(' ')' '{' statement_list '}'

    '('  shift, and go to state 7


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function: type T_NAME '(' . ')' '{' statement_list '}'

    ')'  shift, and go to state 8


State 8

    3 function: type T_NAME '(' ')' . '{' statement_list '}'

    '{'  shift, and go to state 9


State 9

    3 function: type T_NAME '(' ')' '{' . statement_list '}'

    T_NAME       shift, and go to state 10
    T_RETURN     shift, and go to state 11
    T_INT        shift, and go to state 1
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    type            go to state 15
    statement_list  go to state 16
    statement       go to state 17
    expr            go to state 18
    term            go to state 19
    unary           go to state 20
    factor          go to state 21


State 10

    9 statement: T_NAME . '=' expr ';'
   22 factor: T_NAME .

    '='  shift, and go to state 22

    $default  reduce using rule 22 (factor)


State 11

    6 statement: T_RETURN . expr ';'

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    expr    go to state 24
    term    go to state 19
    unary   go to state 20
    factor  go to state 21


State 12

   20 factor: T_INT_VALUE .

    $default  reduce using rule 20 (factor)


State 13

   19 unary: '-' . factor

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '('          shift, and go to state 14

    factor  go to state 25


State 14

   21 factor: '(' . expr ')'

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    expr    go to state 26
    term    go to state 19
    unary   go to state 20
    factor  go to state 21


State 15

    7 statement: type . T_NAME '=' expr ';'
    8          | type . T_NAME ';'

    T_NAME  shift, and go to state 27


State 16

    3 function: type T_NAME '(' ')' '{' statement_list . '}'
    5 statement_list: statement_list . statement

    T_NAME       shift, and go to state 10
    T_RETURN     shift, and go to state 11
    T_INT        shift, and go to state 1
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14
    '}'          shift, and go to state 28

    type       go to state 15
    statement  go to state 29
    expr       go to state 18
    term       go to state 19
    unary      go to state 20
    factor     go to state 21


State 17

    4 statement_list: statement .

    $default  reduce using rule 4 (statement_list)


State 18

   10 statement: expr . ';'
   12 expr: expr . '+' term
   13     | expr . '-' term

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    ';'  shift, and go to state 32


State 19

   11 expr: term .
   15 term: term . '*' unary
   16     | term . '/' unary
   17     | term . '%' unary

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '%'  shift, and go to state 35

    $default  reduce using rule 11 (expr)


State 20

   14 term: unary .

    $default  reduce using rule 14 (term)


State 21

   18 unary: factor .
   23 factor: factor . '^' unary

    '^'  shift, and go to state 36

    '^'       [reduce using rule 18 (unary)]
    $default  reduce using rule 18 (unary)


State 22

    9 statement: T_NAME '=' . expr ';'

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    expr    go to state 37
    term    go to state 19
    unary   go to state 20
    factor  go to state 21


State 23

   22 factor: T_NAME .

    $default  reduce using rule 22 (factor)


State 24

    6 statement: T_RETURN expr . ';'
   12 expr: expr . '+' term
   13     | expr . '-' term

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    ';'  shift, and go to state 38


State 25

   19 unary: '-' factor .
   23 factor: factor . '^' unary

    '^'  shift, and go to state 36

    $default  reduce using rule 19 (unary)


State 26

   12 expr: expr . '+' term
   13     | expr . '-' term
   21 factor: '(' expr . ')'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    ')'  shift, and go to state 39


State 27

    7 statement: type T_NAME . '=' expr ';'
    8          | type T_NAME . ';'

    ';'  shift, and go to state 40
    '='  shift, and go to state 41


State 28

    3 function: type T_NAME '(' ')' '{' statement_list '}' .

    $default  reduce using rule 3 (function)


State 29

    5 statement_list: statement_list statement .

    $default  reduce using rule 5 (statement_list)


State 30

   12 expr: expr '+' . term

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    term    go to state 42
    unary   go to state 20
    factor  go to state 21


State 31

   13 expr: expr '-' . term

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    term    go to state 43
    unary   go to state 20
    factor  go to state 21


State 32

   10 statement: expr ';' .

    $default  reduce using rule 10 (statement)


State 33

   15 term: term '*' . unary

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    unary   go to state 44
    factor  go to state 21


State 34

   16 term: term '/' . unary

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    unary   go to state 45
    factor  go to state 21


State 35

   17 term: term '%' . unary

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    unary   go to state 46
    factor  go to state 21


State 36

   23 factor: factor '^' . unary

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    unary   go to state 47
    factor  go to state 21


State 37

    9 statement: T_NAME '=' expr . ';'
   12 expr: expr . '+' term
   13     | expr . '-' term

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    ';'  shift, and go to state 48


State 38

    6 statement: T_RETURN expr ';' .

    $default  reduce using rule 6 (statement)


State 39

   21 factor: '(' expr ')' .

    $default  reduce using rule 21 (factor)


State 40

    8 statement: type T_NAME ';' .

    $default  reduce using rule 8 (statement)


State 41

    7 statement: type T_NAME '=' . expr ';'

    T_NAME       shift, and go to state 23
    T_INT_VALUE  shift, and go to state 12
    '-'          shift, and go to state 13
    '('          shift, and go to state 14

    expr    go to state 49
    term    go to state 19
    unary   go to state 20
    factor  go to state 21


State 42

   12 expr: expr '+' term .
   15 term: term . '*' unary
   16     | term . '/' unary
   17     | term . '%' unary

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '%'  shift, and go to state 35

    $default  reduce using rule 12 (expr)


State 43

   13 expr: expr '-' term .
   15 term: term . '*' unary
   16     | term . '/' unary
   17     | term . '%' unary

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '%'  shift, and go to state 35

    $default  reduce using rule 13 (expr)


State 44

   15 term: term '*' unary .

    $default  reduce using rule 15 (term)


State 45

   16 term: term '/' unary .

    $default  reduce using rule 16 (term)


State 46

   17 term: term '%' unary .

    $default  reduce using rule 17 (term)


State 47

   23 factor: factor '^' unary .

    $default  reduce using rule 23 (factor)


State 48

    9 statement: T_NAME '=' expr ';' .

    $default  reduce using rule 9 (statement)


State 49

    7 statement: type T_NAME '=' expr . ';'
   12 expr: expr . '+' term
   13     | expr . '-' term

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    ';'  shift, and go to state 50


State 50

    7 statement: type T_NAME '=' expr ';' .

    $default  reduce using rule 7 (statement)
